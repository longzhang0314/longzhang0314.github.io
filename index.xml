<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My New Hugo Site</title>
    <link>https://longzhang0314.github.io/</link>
    <description>Recent content on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 09 Sep 2019 11:20:30 +0800</lastBuildDate>
    
	<atom:link href="https://longzhang0314.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SpringCloud中其他模块事务能否回滚</title>
      <link>https://longzhang0314.github.io/post/springcloud%E4%B8%AD%E5%85%B6%E4%BB%96%E6%A8%A1%E5%9D%97%E4%BA%8B%E5%8A%A1%E8%83%BD%E5%90%A6%E5%9B%9E%E6%BB%9A/</link>
      <pubDate>Mon, 09 Sep 2019 11:20:30 +0800</pubDate>
      
      <guid>https://longzhang0314.github.io/post/springcloud%E4%B8%AD%E5%85%B6%E4%BB%96%E6%A8%A1%E5%9D%97%E4%BA%8B%E5%8A%A1%E8%83%BD%E5%90%A6%E5%9B%9E%E6%BB%9A/</guid>
      <description>在处理业务逻辑时，遇到异常回滚数据库操作是非常常见的，但是，在SpringCloud的项目中，如果遇到业务抛异常需要回滚调用的其他模块数据库操作，能否有效呢？
1. 使用@Transactional注解在方法上 发现无法回滚，可以回滚本地自己模块的操作，但无法回滚调用的其他模块的数据库操作。 2. 使用手动事务 手动设置回滚点在需要回滚的操作之前，抛异常后手动回滚事务。
//设置回滚点 Object savePoint = TransactionAspectSupport.currentTransactionStatus().createSavepoint(); //数据库代码 /* 代码~~~ */ //手动回滚 TransactionAspectSupport.currentTransactionStatus().rollbackToSavepoint(savePoint);  根据最终结果发现，这种方式也是无效的。 结论 SpringCloud模块中，每个模块对于自己模块的事务管理都是独立的，调用其他模块的服务，想要在本地通过回滚的方式回滚数据库操作是不现实的，所以，需要在代码设计之初就要考虑到这种情况，根据某些确定的条件之后再去做数据库操作，如果确实需要根据结果做回滚操作，可以再将数据update回去或者delete掉。</description>
    </item>
    
    <item>
      <title>Git新建一个分支</title>
      <link>https://longzhang0314.github.io/post/git%E6%96%B0%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%88%86%E6%94%AF/</link>
      <pubDate>Wed, 04 Sep 2019 16:12:53 +0800</pubDate>
      
      <guid>https://longzhang0314.github.io/post/git%E6%96%B0%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%88%86%E6%94%AF/</guid>
      <description>参考：https://www.cnblogs.com/kaerxifa/p/11045573.html
 进入本地git仓库目录，使用git bash指令，发现只有master分支   使用git branch 分支名来创建分支，创建完成后再次使用git branch查看，发现本地已经多出了一个新建的分支。   此时远程仓库并没有这个分支，我们需要使用git push origin 分支名 命令将本地修改推送到远程服务器上。   push完成后就可以在远程服务上看到新建的分支了（原本是1 branches）。  </description>
    </item>
    
    <item>
      <title>windows系统最简单的Hugo博客搭建</title>
      <link>https://longzhang0314.github.io/post/hugo%E6%90%AD%E5%BB%BA/</link>
      <pubDate>Wed, 04 Sep 2019 10:11:02 +0800</pubDate>
      
      <guid>https://longzhang0314.github.io/post/hugo%E6%90%AD%E5%BB%BA/</guid>
      <description>1.安装
  需要提前安装git，并拥有一个github账号。 widows需要在https://github.com/gohugoio/hugo/releases处下载hugo运行需要的二级制码hugo_0.57.2_Windows-64bit.zip，并解压配置系统变量。
在命令行使用如下命令确认是否安装正确：
hugo version  打印如下内容表示安装成功：
Hugo Static Site Generator v0.57.2-A849CB2D windows/amd64 BuildDate: 2019-08-17T17:54:13Z   2. 生成站点 切换至想要创建的目录，运行：
hugo new site myblog  打印如下内容表示生成站点成功：
Congratulations! Your new Hugo site is created  3. 下载主题 cd myblog git clone https://github.com/vaga/hugo-theme-m10c.git themes/m10c  打印如下内容表示主题下载成功：
Cloning into &#39;themes/m10c&#39;... remote: Enumerating objects: 18, done. remote: Counting objects: 100% (18/18), done. remote: Compressing objects: 100% (17/17), done. remote: Total 265 (delta 4), reused 11 (delta 1), pack-reused 247 Receiving objects: 65% (173/265), 420.</description>
    </item>
    
  </channel>
</rss>